#!/bin/bash
#
# This script is meant to be run once after running start for the first
# time.  This script downloads a cirros image and registers it.  Then it
# configures networking and nova quotas to allow 40 m1.small instances
# to be created.

# Sanitize language settings to avoid commands bailing out
# with "unsupported locale setting" errors.
unset LANG
unset LANGUAGE
LC_ALL=C
export LC_ALL
for i in curl nova neutron openstack; do
  if [[ ! $(which $i) ]]; then
    echo "$i not installed. Please install $i before proceeding"
    exit 1
  fi
done
# Move to top level directory
REAL_PATH=$(python -c "import os,sys;print os.path.realpath('$0')")
cd "$(dirname "$REAL_PATH")/.."

NETWORK_MANAGER="neutron"

# Test for credentials set
if [[ "${OS_USERNAME}" == "" ]]; then
    echo "No Keystone credentials specified.  Try running source openrc"
    exit
fi

# Test to ensure configure script is run only once
if glance image-list | grep -q cirros; then
    echo "This tool should only be run once per deployment."
    exit
fi

echo Downloading glance image.
IMAGE_URL=http://download.cirros-cloud.net/0.3.4/
IMAGE=cirros-0.3.4-x86_64-disk.img
if ! [ -f "$IMAGE" ]; then
    curl -L -o ./$IMAGE $IMAGE_URL/$IMAGE
fi
echo Creating glance image.
glance image-create --name cirros --progress --disk-format qcow2 --container-format bare --progress --file ./$IMAGE

echo Configuring neutron.
neutron net-create public1 --router:external --provider:physical_network physnet1 --provider:network_type flat
neutron subnet-create --name subnet-1 --disable-dhcp --allocation-pool start={{ public_net_start }},{{ public_net_end }} public1 {{ public_net_cidr }} --gateway {{ public_net_gateway }}

# Sec Group Config
neutron security-group-rule-create default --direction ingress --ethertype IPv4 --protocol icmp --remote-ip-prefix 0.0.0.0/0
neutron security-group-rule-create default --direction ingress --ethertype IPv4 --protocol tcp --port-range-min 22 --port-range-max 22 --remote-ip-prefix 0.0.0.0/0
# Open heat-cfn so it can run on a different host
neutron security-group-rule-create default --direction ingress --ethertype IPv4 --protocol tcp --port-range-min 8000 --port-range-max 8000 --remote-ip-prefix 0.0.0.0/0
neutron security-group-rule-create default --direction ingress --ethertype IPv4 --protocol tcp --port-range-min 8080 --port-range-max 8080 --remote-ip-prefix 0.0.0.0/0

if [ -r ~/.ssh/id_rsa.pub ]; then
    echo Configuring nova public key and quotas.
    nova keypair-add --pub-key ~/.ssh/id_rsa.pub mykey
fi

# Increase the quota to allow 40 m1.small instances to be created

# Get admin user and tenant IDs
ADMIN_USER_ID=$(openstack user list | awk '/ admin / {print $2}')
ADMIN_PROJECT_ID=$(openstack project list | awk '/ admin / {print $2}')

# 40 instances
#nova quota-update --instances 40 $ADMIN_PROJECT_ID
#nova quota-update --user $ADMIN_USER_ID --instances 40 $ADMIN_PROJECT_ID
#
## 40 cores
#nova quota-update --cores 40 $ADMIN_PROJECT_ID
#nova quota-update --user $ADMIN_USER_ID --cores 40 $ADMIN_PROJECT_ID
#
## 96GB ram
#nova quota-update --ram 96000 $ADMIN_PROJECT_ID
#nova quota-update --user $ADMIN_USER_ID --ram 96000 $ADMIN_PROJECT_ID
